name: Release

on:
  # Disabled - auto-version.yml handles releases automatically
  # push:
  #   branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch latest tags
        run: |
          git fetch --tags
      - name: Get version from plugin header
        id: version
        run: |
          VERSION=$(grep "Version:" ai-agent.php | sed 's/.*Version: *//' | tr -d ' ')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
      - name: Check if tag exists
        id: check_tag
        run: |
          # Check if tag exists locally or on remote
          if git rev-parse "${{ steps.version.outputs.tag }}" >/dev/null 2>&1 || git ls-remote --tags origin | grep -q "refs/tags/${{ steps.version.outputs.tag }}$"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag ${{ steps.version.outputs.tag }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag ${{ steps.version.outputs.tag }} does not exist"
          fi
      - name: Create tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "${{ steps.version.outputs.tag }}" -m "Release ${{ steps.version.outputs.tag }}"
          # Try to push the tag, but don't fail if it already exists
          if ! git push origin "${{ steps.version.outputs.tag }}" 2>&1 | grep -q "already exists"; then
            echo "Tag ${{ steps.version.outputs.tag }} created successfully"
          else
            echo "Tag ${{ steps.version.outputs.tag }} already exists on remote, continuing..."
          fi
      - name: Skip tag creation
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          echo "Skipping tag creation - tag ${{ steps.version.outputs.tag }} already exists"
      - name: Check if release exists
        id: check_release
        run: |
          if gh release view "${{ steps.version.outputs.tag }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Release ${{ steps.version.outputs.tag }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Release ${{ steps.version.outputs.tag }} does not exist"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create GitHub Release
        if: steps.check_release.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: Release ${{ steps.version.outputs.tag }}
          body: |
            ## Changes
            - See commit history for details
          draft: false
          prerelease: false
      - name: Skip release creation
        if: steps.check_release.outputs.exists == 'true'
        run: |
          echo "Skipping release creation - release ${{ steps.version.outputs.tag }} already exists"
